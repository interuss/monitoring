# Brings up a local interoperability ecosystem consisting of a DSS instance and dummy OAuth server.

# To bring up this system, run ./run_locally.sh then optionally ./wait_for_local_infra.sh to wait for the servers to start.

version: '3.8'

services:

  crdb:
    hostname: crdb
    image: cockroachdb/cockroach:v21.2.7
    command: start-single-node --insecure
    expose:
      - 26257
    ports:
      - "8080:8080"
    restart: always
    networks:
      - dss_internal_network

  rid_bootstrapper:
    image: interuss/dss:v0.8.0-rc2
    volumes:
      - dss_component_coordination:/var/dss_component_coordination
      - $PWD/startup:/startup:ro
    entrypoint: /startup/rid_bootstrapper.sh
    depends_on:
      - crdb
    networks:
      - dss_internal_network

  scd_bootstrapper:
    image: interuss/dss:v0.8.0-rc2
    volumes:
      - dss_component_coordination:/var/dss_component_coordination
      - $PWD/startup:/startup:ro
    entrypoint: /startup/scd_bootstrapper.sh
    depends_on:
      - crdb
    networks:
      - dss_internal_network

  dss:
    hostname: dss
    image: interuss/dss:v0.8.0-rc2
    volumes:
      - $PWD/../test-certs:/var/test-certs:ro
      - dss_component_coordination:/var/dss_component_coordination
      - $PWD/startup:/startup:ro
    command: /startup/core_service.sh ${DEBUG_ON:-0}
    ports:
      - "4000:4000"
      - "8082:8082"
    depends_on:
      - rid_bootstrapper
      - scd_bootstrapper
    networks:
      - dss_internal_network
      - interop_ecosystem_network

  oauth:
    hostname: oauth
    image: interuss/dummy-oauth
    command: -private_key_file /var/test-certs/auth2.key
    ports:
      - "8085:8085"
    networks:
      - interop_ecosystem_network


networks:
  dss_internal_network:
    name: dss_internal_network
  interop_ecosystem_network:
    name: interop_ecosystem_network

volumes:
  dss_component_coordination:
