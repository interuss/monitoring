# Brings up a local interoperability ecosystem consisting of a DSS instance and dummy OAuth server.

# To bring up this system, run ./run_locally.sh up -d and wait for all containers to succeed or become healthy.

version: '3.8'

services:

  crdb:
    hostname: crdb.uss1.localutm
    image: cockroachdb/cockroach:v24.1.3
    command: start-single-node --insecure
    expose:
      - 26257
    ports:
      - "8080:8080"
      - "26257:26257"
    restart: always
    networks:
      - dss_internal_network
    healthcheck:
      test: curl -f 'http://localhost:8080/health?ready=1' || exit 1
      interval: 3m
      start_period: 30s
      start_interval: 5s

  rid_bootstrapper:
    image: interuss/dss:v0.19.0-rc2
    command: /usr/bin/db-manager migrate --schemas_dir=/db-schemas/rid --db_version "latest" --cockroach_host crdb
    depends_on:
      crdb:
        condition: service_healthy
    networks:
      - dss_internal_network

  scd_bootstrapper:
    image: interuss/dss:v0.19.0-rc2
    command: /usr/bin/db-manager migrate --schemas_dir=/db-schemas/scd --db_version "latest" --cockroach_host crdb
    depends_on:
      crdb:
        condition: service_healthy
    networks:
      - dss_internal_network

  dss:
    hostname: dss.uss1.localutm
    image: interuss/dss:v0.19.0-rc2
    volumes:
      - $PWD/../test-certs:/var/test-certs:ro
      - $PWD/startup/core_service.sh:/startup/core_service.sh:ro
    command: /startup/core_service.sh ${DEBUG_ON:-0}
    expose:
      - 8082
    ports:
      - "4000:4000"
      - "8082:80"
    depends_on:
      rid_bootstrapper:
        condition: service_completed_successfully
      scd_bootstrapper:
        condition: service_completed_successfully
    networks:
      dss_internal_network:
      interop_ecosystem_network:
        aliases:
          - dss.uss2.localutm
    healthcheck:
      test: wget -O - 'http://localhost/healthy' || exit 1
      interval: 3m
      start_period: 30s
      start_interval: 5s

  oauth:
    hostname: oauth.authority.localutm
    image: interuss/dummy-oauth
    command: -private_key_file /var/test-certs/auth2.key
    expose:
      - 8085
    ports:
      - "8085:8085"
    networks:
      - interop_ecosystem_network
    healthcheck:
      test: wget -O - 'http://localhost:8085/token?intended_audience=-&scope=-' || exit 1
      interval: 3m
      start_period: 30s
      start_interval: 5s

networks:
  dss_internal_network:
    name: dss_internal_network
  interop_ecosystem_network:
    name: interop_ecosystem_network

volumes:
  dss_component_coordination:
